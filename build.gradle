group 'com.haiercash'
version '1.5.1'

buildscript {
    ext {
        springBootVersion = '1.3.7.RELEASE'
        // gralde -Prelease
        if (project.hasProperty('release')) {
            releasePublish = true
        } else {
            releasePublish = false;
        }
    }
    repositories {
        mavenLocal()
        maven { url 'http://10.164.194.139:8081/nexus/content/repositories/public/' }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
    println "spring boot version "+ springBootVersion
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: "io.spring.dependency-management"

    sourceCompatibility = 1.8
    ext {
        // project的额外属性，这里用于定义profile属性，模拟maven的profile
        //多环境配置
        if (project.hasProperty('profile')) {
            profile = project['profile']
        } else {
            profile = "dev"
        }
        snippetsDir = file("$buildDir/generated-snippets")
    }
    configurations.all {
        //默认情况下包才上传后24小时更新一次，这个配置自动更新为10s
        //10秒钟，可自定义，如10,'minutes'10分钟，10,'hours'10小时
        resolutionStrategy.cacheChangingModulesFor 10,'seconds'
    }

}
// 所有子项目的通用配置
subprojects {

    repositories {
        mavenLocal()
        maven { url 'http://10.164.194.139:8081/nexus/content/groups/public/' }
        flatDir {
            dirs '../lib'
        }
    }

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.boot:spring-boot-starter-parent:'+springBootVersion
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Brixton.SR4'
        }
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
            resources {
                srcDirs 'src/main/java'
            }
        }
        main {
            resources {
                srcDir "src/main/profiles/${profile}"
            }
        }
    }
    test {
        outputs.dir snippetsDir
    }
    dependencies {
        compile("org.springframework.boot:spring-boot-devtools")
        compile("org.springframework.boot:spring-boot-starter")
        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework.boot:spring-boot-starter-data-jpa")
        compile("org.springframework.boot:spring-boot-starter-data-rest")
        compile("org.springframework.boot:spring-boot-starter-redis")
        compile("org.springframework.boot:spring-boot-starter-security")
        compile('org.springframework.cloud:spring-cloud-starter-ribbon')
        compile('org.springframework.cloud:spring-cloud-starter-eureka')
        // compile("org.springframework.cloud:spring-cloud-starter-config")
        compile("org.springframework.cloud:spring-cloud-starter-zuul")
        // compile("org.springframework.cloud:spring-cloud-starter-security")
        compile("org.springframework.session:spring-session")
        //compile("org.springframework.security:spring-security-web")
        //compile("org.springframework.security:spring-security-data")
        // compile('org.springframework.data:spring-data-rest-hal-browser')

        compile("org.springframework.security.oauth:spring-security-oauth2")

        if (project.hasProperty('release')) {
            compile("com.haiercash:util:1.2.7-SNAPSHOT") {
                exclude(module: 'mybatis')
            }
        } else {
            compile("com.haiercash:util:1.2.7-SNAPSHOT") {
                exclude(module: 'mybatis')
            }
        }

        compile("org.hibernate:hibernate-core")
        compile("org.hibernate.javax.persistence:hibernate-jpa-2.1-api")
        compile('org.json:json:20160212')
        compile('org.apache.httpcomponents:httpmime:4.5')

        compile(':jodconverter-2.2.2:')
        compile(':jodconverter-cli-2.2.2:')
        compile('commons-fileupload:commons-fileupload:1.3.1')
        compile('org.phoenixframe:phoenix_ftpclient:1.4.6') {
            exclude(module: 'persistence-api')
        }
        compile('com.thoughtworks.xstream:xstream:1.4.8')
        compile('org.apache.poi:poi:3.13')
        compile('org.apache.poi:poi-ooxml:3.13')
        compile('org.apache.poi:poi-scratchpad:3.13')
        compile('de.odysseus.staxon:staxon:1.3')
        compile("com.alibaba:fastjson:1.2.12")

        // io.dropwizard.metrics
        compile('io.dropwizard.metrics:metrics-core:3.2.0')
        compile(':metrics-influxdb:0.9.3-3')

        testCompile("org.springframework:spring-test:4.2.6.RELEASE")
        testCompile("org.powermock:powermock-module-junit4:1.6.2")
        testCompile("org.powermock:powermock-api-mockito:1.6.2")
        testCompile("org.powermock:powermock-module-junit4-rule:1.6.2")
        testCompile("org.powermock:powermock-classloading-xstream:1.6.2")
        testCompile("junit:junit:4.12")

    }
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
}

