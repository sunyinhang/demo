server:
  port: 8030
  version:
logging:
  level:
    org.springframework: WARN
security:
  sessions: NEVER
spring:
  application:
    name: payplatform
  ignoreUnresolvablePlaceholders: true
  redis:
    host: 10.164.194.123
    port: 10001
  http.converters.preferred-json-mapper: fastjson
redis:
  single:
    host: 10.164.194.123
    port: 10001
  # cluster:
  #   address: 192.168.1.17:7001,192.168.1.17:7002,192.168.1.17:7003
  #   timeout: 300000
  #   maxRedirections: 6
  pool:
    maxWaitMillis: -1
    maxTotal: 1000
    maxIdle: 9
    minIdle: 100
datasources:
  payplatform:
    datasource:
      url: jdbc:oracle:thin:@10.164.194.168:1521/haiercash
      username: haiercashpay
      password: haiercashpay
      driverClassName: oracle.jdbc.OracleDriver
      # 连接池配置
      # type: com.alibaba.druid.pool.DruidDataSource
      # 初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 1 from dual
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      # poolPreparedStatements: true
      # maxPoolPreparedStatementPerConnectionSize: 21
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 ,wall,commonLogging
      filters: stat,wall,commonLogging
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      # connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    druid:
      path: /druid/*
      loginUsername: admin
      loginPassword: admin
    mybatis:
      dialect: org.apache.ibatis.dialect.OracleDialect
      basePackage: com.haiercash.commons.dao,com.haiercash.payplatform.**.dao
      aliasesPackage: com.haiercash.commons.data,com.haiercash.payplatform.**.data
      mapperLocations: classpath*:com/haiercash/commons/mapping/*.xml,classpath*:com/haiercash/payplatform/**/mapping/*.xml
      underscoreToCamelCase: true
eureka:
  client:
    register-with-eureka: true  #是否注册自身到eureka服务器
    fetch-registry: true        #是否从eureka服务器获取注册信息
    registryFetchIntervalSeconds: 5
    eurekaServiceUrlPollIntervalSeconds: 120
    serviceUrl:
      defaultZone: http://10.164.197.208:1180/eureka/,http://10.164.197.209:1180/eureka/
  instance:
    instanceId: ${spring.application.name}@${spring.cloud.client.ipAddress}:${server.port}(${spring.cloud.client.hostname})
    appname: ${spring.application.name}
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 1
    lease-expiration-duration-in-seconds: 2
    secure-port-enabled: false
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 60000
ribbon:
  ConnectTimeout: 3000
  ReadTimeout: 60000
  eureka:
    enabled: true
common:
  redis:
    host: 10.164.194.123
    port: 10001
    prefix: ":MAIN:"
app:
  instance:
    #  错误码前缀：错误码组成为 前缀（此处定义）+模块代码（controller中定义）+错误码（super.fail中定义）
    errorPrefix: PPF
    redisPrefix: PAYPLATFORM
  file:
    # 文件上传路径
    uploadPath: f:\file\upload
    # excel模板文件路径
    templatePath: f:\file\template
  aspect:
    controller:
      open: true
    service:
      open: true
  rest:
    APPCA: http://APPCA
    APPMANAGE: http://APPMANAGE
    APPMSG: http://APPSERVER-MSG
    APPSERVER: http://APPSERVER
    APPSERVERNOAUTH: http://APPSERVERNOAUTH
    CMISPROXY: http://CMISPROXY
    CRM: http://CRM-BETA
    HCPORTAL: http://HCPORTAL-BETA
    CMISFRONTSERVER: http://CMIS-FRONT-SERVER
    GM: http://GM-BETA
    UAUTH: http://UAUTH-BETA
    ACQUIRER: http://ACQUIRER
    ORDER: http://ORDER
  other:
    haierDataImg_url: /testshare01/00/Data/haierData/
    outplatform_url: http://10.164.194.123:9080
    face_DataImg_url: /testshare01/crm/image/
    appServer_page_url: http://testpm.haiercash.com/
    haierData_url: http://taccount.haier.com
