/**
 * 编译并推送到maven仓库
 * snapshot版本：gradle clean build publish
 * release版本：gradle clean build publish -Prelease
 * 刷新依赖 gradle  --refresh-dependencies
 * 编译时跳过单元测试：-x test
 */

ext {
    snippetsDir = file("$buildDir/generated-snippets")

    // gralde -Prelease
    if (project.hasProperty('release')) {
        releasePublish = true
    } else {
        releasePublish = false;
    }
}

apply plugin: 'eclipse'
apply plugin: 'spring-boot'

group = 'com.haiercash'
version = '2.0.1'

springBoot {
    classifier = 'exec'
}

test {
    outputs.dir snippetsDir
}

jar {
    baseName = "payplatform-" + project.name
    version = project.version
    if (!project.releasePublish) {
        version = version + "-SNAPSHOT"
    }
}

springBoot {
    mainClass = 'com.haiercash.appserver.Application'
}


task initTest(type: Test, dependsOn: test) {
    include "**/*Test.class"
    include "**/*TestImpl.class"
}


dependencies {
    compile project(":payplatform-common")

    compile(":ojdbc6:")
    compile(":XingeApp:")
    compile(":ridl-3.0.1:")
    compile(":juh-3.0.1:")
    compile(":jurt-3.0.1:")
    compile(":unoil-3.0.1:")
    compile("org.hibernate:hibernate-core")
    compile("org.hibernate.javax.persistence:hibernate-jpa-2.1-api")
}

compileJava.dependsOn(processResources)
//build.dependsOn intTest
processResources {
    filesMatching("**/application.properties") {
        expand(project.properties)
    }
}
